Prerequisites for build and deploy to local and AWS:
#1. Java 8 JDK
#2. Apache Maven 3.5.3 or above
#3. Install AWS CLI
#4. Install AWS SAM CLI following guide at https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html
#5. Configure authentication for AWS CLI following https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html, with a AWS user having permission to create DynamoDB table, Lambda functions and IAM role, policy
#6. Docker desktop installed (For local execution)

#Start local dynamodb instance on docker
#With current working directory at folder containing this file
$docker compose up

#Create dynamodb table schema for the first time only
$aws dynamodb create-table \
    --table-name iCommerce-Shopping-Cart \
    --attribute-definitions \
        AttributeName=UserId,AttributeType=S \
        AttributeName=AddedDate,AttributeType=N \
    --key-schema \
        AttributeName=UserId,KeyType=HASH \
        AttributeName=AddedDate,KeyType=RANGE \
    --billing-mode PAY_PER_REQUEST \
    --endpoint-url http://localhost:8000

$aws dynamodb create-table \
    --table-name iCommerce-Products \
    --attribute-definitions \
        AttributeName=uuid,AttributeType=S \
        AttributeName=category,AttributeType=S \
        AttributeName=brand,AttributeType=S \
        AttributeName=colour,AttributeType=S \
    --key-schema \
        AttributeName=uuid,KeyType=HASH \
    --billing-mode PAY_PER_REQUEST \
    --global-secondary-indexes \
        "[
            {
                \"IndexName\": \"GSI_By_Category\",
                \"KeySchema\": [
                    {\"AttributeName\":\"category\",\"KeyType\":\"HASH\"}
                ],
                \"Projection\": {
                    \"ProjectionType\":\"ALL\"
                },
                \"ProvisionedThroughput\": {
                    \"ReadCapacityUnits\": 100,
                    \"WriteCapacityUnits\": 100
                }
            },
            {
                \"IndexName\": \"GSI_By_Brand\",
                \"KeySchema\": [
                    {\"AttributeName\":\"brand\",\"KeyType\":\"HASH\"}
                ],
                \"Projection\": {
                    \"ProjectionType\":\"ALL\"
                },
                \"ProvisionedThroughput\": {
                    \"ReadCapacityUnits\": 100,
                    \"WriteCapacityUnits\": 100
                }
             },
            {
                \"IndexName\": \"GSI_By_Colour\",
                \"KeySchema\": [
                    {\"AttributeName\":\"colour\",\"KeyType\":\"HASH\"}
                ],
                \"Projection\": {
                    \"ProjectionType\":\"ALL\"
                },
                \"ProvisionedThroughput\": {
                    \"ReadCapacityUnits\": 100,
                    \"WriteCapacityUnits\": 100
                }
            }
        ]" \
    --endpoint-url http://localhost:8000

#Init some test data for product table
$aws dynamodb batch-write-item --request-items file://products/inputs/initial-test-data.json --endpoint-url http://localhost:8000

#To start the product service and shopping-cart service:

#Change dir to product project folder in new terminal window
$cd product
$sam build
$sam local start-api --env-vars inputs/local-env-vars.json --docker-network icommerce-network --port 3001

#Change dir to shopping-cart project folder in new terminal window
$cd shopping-cart
$sam build
sam local start-api --env-vars inputs/local-env-vars.json --docker-network icommerce-network --port 3002


Call API:
#Get all products:
curl http://localhost:3001/products

#Get specific product by its uuid:
curl -d '{"uuid": "zz21cz3c1"}' http://localhost:3001/products/get-product

#Query product:
curl -d '{"category":"Accessories","price":{"comparisonOperand":"<","value":"1000"},"brand":"Apple","colour":"Black"}' http://localhost:3001/products/find

#Add new item to shopping cart
curl -d '{"userId": "a1ef23f5-5a50-4d54-84f7-2887074b8be0","productUuid": "f230fh0g3","quantity": "1"}' http://localhost:3002/shopping-cart/add

#Add new item to shopping cart
curl -d '{"userId": "a1ef23f5-5a50-4d54-84f7-2887074b8be0", "addedDate": 1628046399728, "productUuid": "f230fh0g3","quantity": "1"}' http://localhost:3002/shopping-cart/add

#Remove item from my shopping cart
curl -d '{"userId": "a1ef23f5-5a50-4d54-84f7-2887074b8be0", "addedDate": 1628046399728 }' http://localhost:3002/shopping-cart/remove

#Retrieve my shopping cart
curl -d '{"userId": "a1ef23f5-5a50-4d54-84f7-2887074b8be0"}' http://localhost:3002/shopping-cart